{"version":3,"sources":["scripts/main.js"],"names":["game","matrix","score","moved","messageGame","win","lose","start","gameFieldCells","document","querySelector","messagePlace","button","gameScore","gameHighest","localeScore","window","localStorage","getItem","render","innerHTML","forEach","col","tr","createElement","className","row","td","textContent","append","setItem","renderMessage","isGameWin","isGameLose","classMessage","message","clearData","map","addRandomCell","emptyCell","colInd","rowInd","push","randomCellNum","Math","random","randomPosition","floor","length","randomCol","randomRow","current","removeEventListener","handlerKey","startGame","addEventListener","e","key","searchEmptyTails","searchSameTails","startCol","startRow","actionX","actionY","setValue","move","currCol","currRow","actionCol","actionRow","classList","remove","add"],"mappings":"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","file":"main.2011a177.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst game = {\n  matrix: [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ],\n  score: 0,\n  moved: false,\n};\n\nconst messageGame = {\n  win: 'Winner! Congrats! You did it!',\n  lose: 'You lose! Restart the game?',\n  start: 'Press \"Start\" to begin game. Use the arrows to move. Good luck!',\n};\n\nconst gameFieldCells = document.querySelector('.game-field tbody');\nconst messagePlace = document.querySelector('.message-container');\nconst button = document.querySelector('.start');\nconst gameScore = document.querySelector('.game-score');\nconst gameHighest = document.querySelector('.game-highest');\n\nconst localeScore = window.localStorage.getItem('highest') || 0;\n\nrender();\n\nfunction render() {\n  gameFieldCells.innerHTML = '';\n\n  game.matrix.forEach(col => {\n    const tr = document.createElement('tr');\n\n    tr.className = 'field-row';\n\n    col.forEach(row => {\n      const td = document.createElement('td');\n\n      if (row !== 0) {\n        td.className = `field-cell field-cell--${row}`;\n\n        td.textContent = row;\n      } else if (row === 0) {\n        td.className = `field-cell`;\n      }\n\n      tr.append(td);\n    });\n\n    gameFieldCells.append(tr);\n  });\n\n  gameScore.textContent = game.score;\n  gameHighest.textContent = window.localStorage.getItem('highest');\n\n  if (game.score >= localeScore) {\n    window.localStorage.setItem('highest', game.score);\n  }\n\n  renderMessage('message-start', messageGame.start);\n\n  const isWin = isGameWin();\n\n  if (!isWin) {\n    isGameLose();\n  }\n}\n\nfunction renderMessage(classMessage, message) {\n  messagePlace.innerHTML = `\n    <p class=\"message ${classMessage}\">\n      ${message}\n    </p>\n  `;\n}\n\nfunction clearData() {\n  game.matrix = game.matrix.map(col => col.map(() => 0));\n  game.score = 0;\n  game.moved = false;\n\n  render();\n}\n\nfunction addRandomCell() {\n  const emptyCell = [];\n\n  game.matrix.forEach((col, colInd) => {\n    col.forEach((row, rowInd) => {\n      if (row === 0) {\n        emptyCell.push([colInd, rowInd]);\n      }\n    });\n  });\n\n  const randomCellNum = Math.random() <= 0.1 ? 4 : 2;\n  const randomPosition = Math.floor(Math.random() * emptyCell.length);\n\n  const randomCol = emptyCell[randomPosition][0];\n  const randomRow = emptyCell[randomPosition][1];\n\n  game.matrix[randomCol][randomRow] = randomCellNum;\n}\n\nfunction isGameLose() {\n  for (let col = 0; col < 4; col++) {\n    for (let row = 0; row < 4; row++) {\n      const current = game.matrix[col][row];\n\n      if (current === 0) {\n        return;\n      }\n\n      if (col !== 3 && current === game.matrix[col + 1][row]) {\n        return;\n      }\n\n      if (row !== 3 && current === game.matrix[col][row + 1]) {\n        return;\n      }\n    }\n  }\n\n  renderMessage('message-lose', messageGame.lose);\n\n  window.removeEventListener('keydown', handlerKey);\n}\n\nfunction isGameWin() {\n  for (let col = 0; col < 4; col++) {\n    for (let row = 0; row < 4; row++) {\n      const current = game.matrix[col][row];\n\n      if (current === 2048) {\n        renderMessage('message-win', messageGame.win);\n\n        window.removeEventListener('keydown', handlerKey);\n\n        return true;\n      }\n    }\n  }\n}\n\nfunction startGame() {\n  clearData();\n  addRandomCell();\n  addRandomCell();\n\n  render();\n\n  window.addEventListener('keydown', handlerKey);\n}\n\nfunction handlerKey(e) {\n  switch (e.key) {\n    case 'w':\n    case 'ArrowUp':\n      searchEmptyTails('up');\n      searchSameTails('up');\n      searchEmptyTails('up');\n\n      break;\n    case 's':\n    case 'ArrowDown':\n      searchEmptyTails('down');\n      searchSameTails('down');\n      searchEmptyTails('down');\n\n      break;\n    case 'a':\n    case 'ArrowLeft':\n      searchEmptyTails('left');\n      searchSameTails('left');\n      searchEmptyTails('left');\n\n      break;\n    case 'd':\n    case 'ArrowRight':\n      searchEmptyTails('right');\n      searchSameTails('right');\n      searchEmptyTails('right');\n\n      break;\n  }\n\n  render();\n\n  if (game.moved) {\n    addRandomCell();\n    render();\n\n    game.moved = false;\n  }\n}\n\nlet startCol = 0;\nlet startRow = 0;\n\nlet actionX = 0;\nlet actionY = 0;\n\nfunction setValue(move) {\n  startCol = 0;\n  startRow = 0;\n\n  actionX = 0;\n  actionY = 0;\n\n  switch (move) {\n    case 'up':\n      startCol = 1;\n\n      actionX = -1;\n\n      break;\n    case 'down':\n      startCol = 2;\n\n      actionX = 1;\n\n      break;\n    case 'left':\n      startRow = 1;\n\n      actionY = -1;\n\n      break;\n    case 'right':\n      startRow = 2;\n\n      actionY = 1;\n\n      break;\n  }\n}\n\nfunction searchEmptyTails(move) {\n  setValue(move);\n\n  for (\n    let col = startCol;\n    col >= 0 && col < 4;\n    col += (move === 'down' ? -1 : 1)\n  ) {\n    for (\n      let row = startRow;\n      row >= 0 && row < 4;\n      row += (move === 'right' ? -1 : 1)\n    ) {\n      if (game.matrix[col][row] === 0) {\n        continue;\n      }\n\n      let currCol = col;\n      let currRow = row;\n\n      while (\n        (move === 'up' ? currCol > 0\n          : move === 'down' ? currCol < 3\n            : move === 'left' ? currRow > 0\n              : currRow < 3\n        ) && game.matrix[currCol + actionX][currRow + actionY] === 0\n      ) {\n        currCol += actionX;\n        currRow += actionY;\n      }\n\n      if (currCol !== col || currRow !== row) {\n        game.matrix[currCol][currRow] = game.matrix[col][row];\n        game.matrix[col][row] = 0;\n\n        game.moved = true;\n      }\n    }\n  }\n}\n\nfunction searchSameTails(move) {\n  setValue(move);\n\n  for (\n    let col = startCol;\n    col >= 0 && col < 4;\n    col += (move === 'down' ? -1 : 1)\n  ) {\n    for (\n      let row = startRow;\n      row >= 0 && row < 4;\n      row += (move === 'right' ? -1 : 1)\n    ) {\n      const actionCol = col + actionX;\n      const actionRow = row + actionY;\n\n      if (game.matrix[col][row] === 0) {\n        continue;\n      }\n\n      if (game.matrix[actionCol][actionRow] === game.matrix[col][row]) {\n        game.matrix[actionCol][actionRow] *= 2;\n        game.score += game.matrix[actionCol][actionRow];\n        game.matrix[col][row] = 0;\n\n        game.moved = true;\n      }\n    }\n  }\n}\n\nbutton.addEventListener('click', () => {\n  startGame();\n\n  button.classList.remove('start');\n  button.classList.add('restart');\n  button.textContent = 'Restart';\n});\n"]}